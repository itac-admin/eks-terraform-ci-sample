version: 2.1

executors:
  terraform:
    working_directory: ~/repo
    docker:
       - image: hashicorp/terraform:0.12.3
  kubectl:
    working_directory: ~/repo
    docker:
      - image: 705180747189.dkr.ecr.ap-northeast-1.amazonaws.com/terraform-eks-sample/ci_for_k8s:fdbddb8e66e923cb482788eebf470c72c2a9638d
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
        environment:
          AWS_DEFAULT_REGION: ap-northeast-1

commands:
  setup_aws_credentials:
    steps:
      - run:
          name: setup aws credentials
          command: |
            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $BASH_ENV

jobs:
  terraform-plan:
    executor: terraform
    steps:
      - checkout
      - setup_aws_credentials
      - run:
          name: terraform plan and notify
          command: |
            cd terraform
            terraform init
            terraform plan | ../.circleci/bin/tfnotify plan
      - save_cache:
          key: terraform-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  terraform-apply:
    executor: terraform
    steps:
      - restore_cache:
          key: terraform-{{ .Environment.CIRCLE_SHA1 }}
      - setup_aws_credentials
      - run:
          name: terraform apply
          command: |
            cd terraform
            terraform apply -auto-approve

  app-test:
    working_directory: ~/repo
    docker:
       - image: circleci/golang:1.12.6
         environment:
           GO111MODULE: "on"
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "app/go.sum" }}
      - run:
          name: test
          command: |
            go test -v ./app/...
      - save_cache:
          key: go-mod-{{ checksum "app/go.sum" }}
          paths:
            - "/go/pkg/mod"

  app-build: # 参考: https://circleci.com/blog/how-to-build-a-docker-image-on-circleci-2-0/
    working_directory: ~/repo
    docker:
      - image: docker:17.05.0-ce-git
        environment:
          AWS_DEFAULT_REGION: ap-northeast-1
    steps:
      - checkout
      - setup_remote_docker
      - setup_aws_credentials
      - run:
          name: login to ECR
          command: | # TODO: build用のimageを用意する
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
            eval $(aws ecr get-login)
      - run:
          name: build and push image
          command: |
            IMAGE_NAME=705180747189.dkr.ecr.ap-northeast-1.amazonaws.com/terraform-eks-sample/app:$(git rev-parse HEAD)
            docker build -t $IMAGE_NAME app
            docker push $IMAGE_NAME

  kubectl-apply:
    executor: kubectl
    steps:
      - checkout
      - run:
          name: setup kubectl
          command: |
            aws eks update-kubeconfig --name terraform-eks-sample
      - run:
          name: kubectl apply
          command: |
            kubectl get node

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - terraform-plan
      - terraform-apply:
          requires:
            - terraform-plan
          filters:
            branches:
              only:
                - master
      - app-test
      - app-build:
          filters:
            branches:
              only:
                - master
      - kubectl-apply:
          filters:
            branches:
              only:
                - master
